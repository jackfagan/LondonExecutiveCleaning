{"version":3,"sources":["images/logo.PNG","images/virus.svg","images/rating.svg","images/calendar.svg","components/ContactForm.js","App.js","reportWebVitals.js","index.js"],"names":["emailRegex","RegExp","ContactForm","props","handleSubmit","e","preventDefault","formErrors","rest","valid","Object","values","forEach","val","length","formValid","state","name","email","number","subject","message","templateParams","emailjs","send","console","log","resetForm","error","handleChange","target","value","test","setState","this","className","id","onSubmit","noValidate","type","onChange","placeholder","rows","Component","App","src","logo","alt","virus","calendar","rating","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f78551e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.bb9d16eb.PNG\";","export default __webpack_public_path__ + \"static/media/virus.8bb40686.svg\";","export default __webpack_public_path__ + \"static/media/rating.dfe1686e.svg\";","export default __webpack_public_path__ + \"static/media/calendar.2fd75d1b.svg\";","import React, { Component } from 'react';\nimport emailjs from 'emailjs-com';\n\n// Email validation\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n\n// Form validation\nconst formValid = ({ formErrors, ...rest }) => {\n  let valid = true;\n\n  // Validate form errors being empty\n  Object.values(formErrors).forEach((val) => {\n    val.length > 0 && (valid = false);\n  });\n\n  // Validate the form was filled out\n  Object.values(rest).forEach((val) => {\n    val === '' && (valid = false);\n  });\n\n  return valid;\n};\n\nclass ContactForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      number: '',\n      subject: '',\n      message: '',\n      formErrors: {\n        name: '',\n        email: '',\n        subject: '',\n        message: '',\n      },\n    };\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (formValid(this.state)) {\n      // Handle form validation success\n      const { name, email, number, subject, message } = this.state;\n\n      // Set template params\n      let templateParams = {\n        name: name,\n        email: email,\n        number: number,\n        subject: subject,\n        message: message,\n      };\n      emailjs.send('service_efgvl7m', 'template_hb1dv4b', templateParams, 'user_hPRLmapB4SAjTHf4l51O5');\n\n      console.log(`\n        --SUBMITTING--\n        Name: ${name}\n        Email: ${email}\n        Number: ${number}\n        Subject: ${subject}\n        Message: ${message}\n      `);\n\n      this.resetForm();\n    } else {\n      // Handle form validation failure\n      console.error('FORM INVALID - DISPLAY ERROR MESSAGE');\n    }\n  };\n\n  // Function to reset form\n  resetForm() {\n    this.setState({\n      name: '',\n      email: '',\n      subject: '',\n      number: '',\n      message: '',\n    });\n  }\n\n  handleChange = (e) => {\n    e.preventDefault();\n    const { name, value } = e.target;\n    let formErrors = { ...this.state.formErrors };\n\n    switch (name) {\n      case 'name':\n        formErrors.name = value.length < 1 ? 'Please enter your name.' : '';\n        break;\n      case 'email':\n        formErrors.email = emailRegex.test(value) ? '' : 'Please enter a valid email address.';\n        break;\n      case 'subject':\n        formErrors.subject = value.length < 1 ? 'Please enter a subject.' : '';\n        break;\n      case 'message':\n        formErrors.message = value.length < 1 ? 'Please enter a message' : '';\n        break;\n      default:\n        break;\n    }\n    this.setState({ formErrors, [name]: value });\n  };\n\n  render() {\n    const { formErrors } = this.state;\n\n    return (\n      <div className='ContactForm'>\n        <form id='contact-form' onSubmit={this.handleSubmit} noValidate>\n          <div className=\"form-input-split\">\n            <label>\n              <div className=\"input-div\">\n                  <input\n                  type='text'\n                  name='name'\n                  value={this.state.name}\n                  className={`form-control formInput ${formErrors.name.length > 0 ? 'error' : null}`}\n                  onChange={this.handleChange}\n                  placeholder='Name'\n                  noValidate\n                ></input>\n                {formErrors.name.length > 0 && (\n                  <span className='errorMessage'>{formErrors.name}</span>\n                )}\n              </div>\n            </label>\n\n            <label>\n              <div className=\"input-div\">\n                <input\n                  type='email'\n                  name='email'\n                  value={this.state.email}\n                  className={`form-control formInput ${formErrors.email.length > 0 ? 'error' : null}`}\n                  onChange={this.handleChange}\n                  placeholder='Email'\n                  noValidate\n                ></input>\n                {formErrors.email.length > 0 && (\n                  <span className='errorMessage'>{formErrors.email}</span>\n                )}\n              </div>\n            </label>\n\n            <label>\n              <div className=\"input-div\">\n                <input\n                  type='tel'\n                  name='number'\n                  value={this.state.number}\n                  className={`form-control formInput`}\n                  onChange={this.handleChange}\n                  placeholder='Number'\n                  noValidate\n                ></input>\n              </div>\n            </label>\n          </div>\n          <div className=\"form-input-split\">\n            <label>\n              <div className='input-div'>\n                <input\n                  type='subject'\n                  name='subject'\n                  value={this.state.subject}\n                  className={`form-control formInput ${\n                    formErrors.subject.length > 0 ? 'error' : null\n                  }`}\n                  onChange={this.handleChange}\n                  placeholder='Subject'\n                  noValidate\n                ></input>\n                {formErrors.subject.length > 0 && (\n                  <span className='errorMessage'>{formErrors.subject}</span>\n                )}\n              </div>\n            </label>\n\n            <label>\n              <div className='input-div'>\n                <textarea\n                  rows='5'\n                  name='message'\n                  value={this.state.message}\n                  className={`form-control formInput ${\n                    formErrors.message.length > 0 ? 'error' : null\n                  }`}\n                  onChange={this.handleChange}\n                  placeholder='Message'\n                  noValidate\n                ></textarea>\n                {formErrors.message.length > 0 && (\n                  <span className='errorMessage'>{formErrors.message}</span>\n                )}\n              </div>\n            </label> \n          </div> \n          <button className='submit-btn' type='submit'>\n            Submit\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ContactForm;","import logo from './images/logo.PNG';\nimport './App.scss';\nimport virus from './images/virus.svg';\nimport rating from './images/rating.svg';\nimport calendar from './images/calendar.svg';\nimport ContactForm from './components/ContactForm';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-top-body\">\n        <div className=\"Top-body-content\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>07720 616834</p>\n        </div>\n        <div className=\"down-link\">\n          <p>⌄</p>\n        </div>\n      </header>\n      <div className=\"App-main-body\">\n        <div className=\"service-block\">\n          <div className=\"service-wrapper\">\n            <img className=\"service-icon\" src={virus} />\n            <div className=\"service-text\">\n              <h3>Corona Virus Cleaning</h3>\n              <p>Corona Virus means clenaing services lorem ipsum dolor sit amet lorem ipsum dolor sit amet book now for covid safe spray clean</p>\n            </div>\n          </div> \n\n          <div className=\"service-wrapper\">\n            <img className=\"service-icon\" src={calendar} />\n            <div className=\"service-text\">\n              <h3>7 Day Availability</h3>\n              <p>Corona Virus means clenaing services lorem ipsum dolor sit amet lorem ipsum dolor sit amet book now for covid safe spray clean</p>\n            </div>          </div> \n\n          <div className=\"service-wrapper\">\n            <img className=\"service-icon\" src={rating} />\n            <div className=\"service-text\">\n              <h3>10/10 Customer Satisfaction</h3>\n              <p>Corona Virus means clenaing services lorem ipsum dolor sit amet lorem ipsum dolor sit amet book now for covid safe spray clean</p>\n            </div>\n          </div> \n        </div> \n        <div className=\"about-us\">\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\n          <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\n        </div>\n\n        <div className=\"contact-div\">\n          <hr />\n          <div className=\"contact-title\">\n            <h1>Contact Us</h1>\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          </div>  \n          <ContactForm />\n          <hr />\n          <br />\n          <p>Any clenaing rules will go here lorem ipsum dolor sit amet cleaning rules please here test dummy text all cleaning rules text bottom footer lorem ipsum dolor sit amet</p>\n          <br />\n          <br />\n        </div>\n      </div>\n     </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}